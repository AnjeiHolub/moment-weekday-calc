function WeekDayCalc(e,t,a){if(this.rangeStart=moment(e),this.rangeEnd=moment(t),this.weekdays=a,this.rangeStart.isAfter(this.rangeEnd))throw new WeekDayCalcException("rangeStart is after rangeEnd");if(!a)throw new WeekDayCalcException("weekdays must be defined")}function WeekDayCalcException(e){this.message=e,this.name="WeekDayCalcException"}"undefined"!=typeof require&&(moment=require("moment")),WeekDayCalc.prototype.calculate=function(){var e=0,t=this.rangeStart.clone().endOf("week"),a=this.rangeEnd.clone().startOf("week");if(a.diff(t,"days")<30)e=this.calculateIterative(this.rangeStart,this.rangeEnd,this.weekdays);else{var n=Math.round(a.diff(t,"weeks",!0));e+=n*this.weekdays.length,e+=this.calculateIterative(this.rangeStart,t,this.weekdays),e+=this.calculateIterative(a,this.rangeEnd,this.weekdays)}return e},WeekDayCalc.prototype.calculateIterative=function(e,t,a){for(var n=0,r=e.clone();r.valueOf()<=t.valueOf();)a.indexOf(r.weekday())>=0&&n++,r.add(1,"day");return n},function(e){e.fn.weekdaycalc=function(){var t,a,n;switch(arguments.length){case 3:t=e(arguments[0]).startOf("day"),a=e(arguments[1]).endOf("day"),n=arguments[2];break;case 2:t=this,a=arguments[0],n=arguments[1];break;case 1:t=this.clone().startOf("year"),a=this.clone().endOf("year"),n=arguments[0];break;default:WeekDayCalcException("unexpected arguments length "+arguments.length+". Expecting 1 to 3 args")}if(t.isAfter(a)){var r=t.clone();t=a.clone(),a=r}var s=new WeekDayCalc(t,a,n);return s.calculate()}}(moment);
//# sourceMappingURL=moment.weekdaycalc.min.js.map
